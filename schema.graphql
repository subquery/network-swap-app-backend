type Trader @entity {
  id: ID! #trader address
  totalTradeAmount: BigInt! #total sold amount of KSQT
  totalAwardAmount: BigInt! #summed from ClaimRewards event
  maxTradeAmount: BigInt! #totalAwardAmount - totalTradeAmount

  trades: [Trade] @derivedFrom(field: "sender")

  createAt: String #getUpsertAt: topicHandler:block:Txhash
  updateAt: String #getUpsertAt: topicHandler:block:Txhash
}

type Trade @entity {
  id: ID! #orderId:txhash
  sender: Trader!

  tokenGive: String!
  tokenGet: String!
  amountGive: BigInt!
  amountGet: BigInt!

  createAt: String #getUpsertAt: topicHandler:block:Txhash
  updateAt: String #getUpsertAt: topicHandler:block:Txhash
}

enum OrderStatus {
  ACTIVE
  INACTIVE
}

type Order @entity {
  id: ID! #orderId
  tokenGiveBalance: BigInt! #amount left that indexer can trade
  pairOrderId: BigInt! # pair order ID

  sender: String!
  tokenGive: String!
  tokenGet: String!
  amountGive: BigInt!
  amountGet: BigInt!
  expireDate: Date!

  status: OrderStatus! # Inactive when cancel/setExpired

  createAt: String #getUpsertAt: topicHandler:block:Txhash
  updateAt: String #getUpsertAt: topicHandler:block:Txhash
}
